#
# vim:syntax=yaml
#
# Configuration file for pdserv
# This is a YAML document.
#

---
# Configuration for the MSR protocol
# Options:
#       port:           unsigned int    Port number of the server
#                                       If not defined, the server will try
#                                       all ports starting from 2345
#       splitvectors:   true/false      DEPRECATED; Present multidimensional
#                                       variables as individual scalars for
#                                       older MSR protocol clients
#       pathprefix:     string          DEPRECATED; Prepend a prefix to all
#                                       variable paths. DO NOT include forward
#                                       slashes '/' in the path
msr:
    #port: 2345
    #splitvectors: 1
    #pathprefix: prefix

# Logging configuration
#
# PDSERV uses the log4cplus package for logging. This is a very powerful
# logging mechanism which is highly configurable. Its design and
# configuration closely resembles the very popular log4j Java tool.
# More information about this configuration can be found by searching
# for "log4j configuration files" and applying it appropriately using the
# example configuration below
#
# pdserv logs to the following categories:
#   log4cplus.rootLogger: all activities concerning application
#   log4cplus.logger.msr: activities concerning MSR protocol
#   log4cplus.logger.parameter: Parameter changes
#   log4cplus.logger.event: Event logging
#
# See http://log4cplus.sourceforge.net/docs/html/classlog4cplus_1_1Appender.html
# for documentation regarding appenders and their options. Click on the
# desired appender in the inheritance diagram
logging: |
    #log4cplus.rootLogger=INFO, syslog
    log4cplus.rootLogger=TRACE, console

    ## Here is the parameter channel. Changes to parameters are logged here
    ## If you log parameters to another destination, consider setting the
    ## additivity flag to false so that these messages are not propagated
    ## to the parents (rootLogger) as well.
    #log4cplus.logger.parameter=INFO, parameterlog
    #log4cplus.additivity.parameter=false

    ## Event channel. Application events are sent to this channel
    ## See the comment about additivity above.
    #log4cplus.logger.event=INFO, eventlog
    #log4cplus.additivity.event=false

    ## Example configuration for logging to syslog
    log4cplus.appender.syslog=log4cplus::SysLogAppender
    log4cplus.appender.syslog.ident=pdserv
    log4cplus.appender.syslog.facility=LOCAL0
    log4cplus.appender.syslog.layout=log4cplus::PatternLayout
    log4cplus.appender.syslog.layout.ConversionPattern=%p: %c <%x> - %m%n

    ## Example configuration for logging to a file. More sophisticated
    ## file appenders are RollingFileAppender and DailyRollingFileAppender
    ## capable of truncating the log file size
    log4cplus.appender.parameterlog=log4cplus::FileAppender
    log4cplus.appender.parameterlog.File=/tmp/parameter.log
    log4cplus.appender.parameterlog.layout=log4cplus::PatternLayout
    log4cplus.appender.parameterlog.layout.ConversionPattern=%D %c <%x>: %m%n

    ## Example configuration for logging to a file
    log4cplus.appender.filelog=log4cplus::FileAppender
    log4cplus.appender.filelog.File=/tmp/pdserv.log
    log4cplus.appender.filelog.Append=true
    log4cplus.appender.filelog.layout=log4cplus::PatternLayout
    log4cplus.appender.filelog.layout.ConversionPattern=%D: %-5p %c <%x>: %m%n

    ## Example configuration for logging output to the console
    log4cplus.appender.console=log4cplus::ConsoleAppender
    log4cplus.appender.console.logToStdErr=1
    log4cplus.appender.console.layout=log4cplus::PatternLayout
    log4cplus.appender.console.layout.ConversionPattern=%D %p %c %x: %m%n

    ## This appender does not output anything
    log4cplus.appender.null=log4cplus::NullAppender
