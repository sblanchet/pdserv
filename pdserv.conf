#
# Configuration file for etherlab_buddy
# This is a YAML document.
#
# vim: syntax=yaml
#
# The first level is the application name for which the
# configuration applies to
# The second level is the module. Just supplying the module name
# will start it with default configuration.
# Otherwise specify parameters on the third level
#
# logging priorities: EMERG FATAL ALERT CRIT ERROR WARN NOTICE INFO DEBUG
#

---
#logging: |
#    # Logging configuration
#    # Configure buddy logging in this section. Logging configuration
#    # is done in log4j style.
#    #
#    # The buddy logs to the following categories:
#    # - root:
#    #       NOTICE: New and Removed applications
#    #
#    # - <application>: all activities concerning application
#    #      NOTICE: New client connections
#    #      INFO: Application information
#    #
#    # - <application>.parameter: Parameter changes
#    #      NOTICE: parameter change
#    #      INFO: parameter value
#
#    log4j.rootCategory=NOTICE, syslog
#    log4j.category.lan=INFO
#    log4j.category.lan.parameter=INFO, parameterlog
#    log4j.additivity.lan.parameter=false
#
#    #log4j.category.nm3sim=  # No logging for nm3sim
#    #log4j.additivity.nm3sim=false
#
#    log4j.appender.syslog=org.apache.log4j.LocalSyslogAppender
#    log4j.appender.syslog.syslogName=buddy
#    log4j.appender.syslog.facility=16    # LOG_LOCAL0; see sys/syslog.h
#    log4j.appender.syslog.layout=org.apache.log4j.PatternLayout
#    log4j.appender.syslog.layout.ConversionPattern=%p %c %x - %m%n
#
#    log4j.appender.parameterlog=org.apache.log4j.FileAppender
#    log4j.appender.parameterlog.fileName=/tmp/parameter.log
#    log4j.appender.parameterlog.layout=org.apache.log4j.BasicLayout
#
#    log4j.appender.lanlog=org.apache.log4j.FileAppender
#    log4j.appender.lanlog.fileName=/tmp/lan.log
#    log4j.appender.lanlog.layout=org.apache.log4j.BasicLayout
#
#    log4j.appender.cosole=org.apache.log4j.ConsoleAppender
#    log4j.appender.cosole.layout=org.apache.log4j.BasicLayout
#

## Define default options for servers
## The following servers and options are available
##      msr:
##          traditional:        # Split vectors into separate signals
##
#defaults:
#    msr:
#        traditional: 1

## Define specific server parameters for applications
## The following servers and options are available
##      msr:
##          traditional:        # Split vectors into separate signals
##          port:               # Server port (default: 2345)
##
#app: &app
#    msr:
#       port: 2345
#       traditional: 1

## Aliases
## To define aliases, mark an application with &<alias>, e.g.
## original: &orig
##     msr: ...
## 
## Then you can reference them like
## alias_name: *orig
##
#app1: *app
#app1_test: *app
