# cmake file for building process data communications server

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(pdcomserv)
SET (CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS TRUE)

# Project version
SET (MAJOR_VERSION 0)
SET (MINOR_VERSION 99)
SET (PATCH_LEVEL 0)
SET (VERSION ${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_LEVEL})
#SET (${PROJECT_NAME}_SOVERSION "SOVERSION")
#    ${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_LEVEL})


# Project path options
IF (NOT PREFIX)         # Project root
    SET (PREFIX "/opt/etherlab")
ENDIF ()

IF (SYSCONFDIR)         # configuration files
    SET (ABS_SYSCONFDIR "${SYSCONFDIR}")
    SET (PC_SYSCONFDIR "${SYSCONFDIR}")
ELSE ()
    SET (ABS_SYSCONFDIR ${PREFIX}/etc)
    SET (PC_SYSCONFDIR "\${prefix}/etc")
ENDIF ()

IF (INCLUDEDIR)         # include files
    SET (ABS_INCLUDEDIR "${INCLUDEDIR}")
    SET (PC_INCLUDEDIR "${INCLUDEDIR}")
ELSE ()
    SET (ABS_INCLUDEDIR ${PREFIX}/include)
    SET (PC_INCLUDEDIR "\${prefix}/include")
ENDIF ()

IF (EXECDIR)            # executables
    SET (ABS_EXECDIR "${EXECDIR}")
    SET (PC_EXECDIR "${EXECDIR}")
ELSE ()
    SET (ABS_EXECDIR ${PREFIX}/bin)
    SET (PC_EXECDIR "\${prefix}/bin")
ENDIF ()

IF (LIBDIR)             # libraries
    SET (ABS_LIBDIR "${LIBDIR}")
    SET (PC_LIBDIR "${LIBDIR}")
ELSE ()
    SET (ABS_LIBDIR ${PREFIX}/lib)
    SET (PC_LIBDIR "\${prefix}/lib")
ENDIF ()

# Make sure that the project options are remembered
SET (PREFIX "${PREFIX}" CACHE PATH
    "Root directory for the project" FORCE)
SET (SYSCONFDIR "${SYSCONFDIR}" CACHE PATH
    "Directory for configuration files" FORCE)
SET (INCLUDEDIR "${INCLUDEDIR}" CACHE PATH
    "Directory for header files" FORCE)
SET (EXECDIR "${EXECDIR}" CACHE PATH
    "Directory for executables" FORCE)
SET (LIBDIR "${LIBDIR}" CACHE PATH
    "Directory for libraries" FORCE)

#SET (PC_SYSCONFDIR "${PC_SYSCONFDIR}" CACHE PATH
#    "Directory for configuration files" FORCE)
#SET (PC_INCLUDEDIR "${PC_INCLUDEDIR}" CACHE PATH
#    "Directory for header files" FORCE)
#SET (PC_EXECDIR "${PC_EXECDIR}" CACHE PATH
#    "Directory for executables" FORCE)
#SET (PC_LIBDIR "${PC_LIBDIR}" CACHE PATH
#    "Directory for libraries" FORCE)

ENABLE_TESTING()

INCLUDE (InstallRequiredSystemLibraries)


SET (CPACK_PACKAGE_DESCRIPTION_SUMMARY "Process data communications library")
SET (CPACK_PACKAGE_VENDOR "Richard Hacker")
SET (CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README.txt")
SET (CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING")
SET (CPACK_PACKAGE_VERSION_MAJOR ${MAJOR_VERSION})
SET (CPACK_PACKAGE_VERSION_MINOR ${MINOR_VERSION})
SET (CPACK_PACKAGE_VERSION_PATCH ${PATCH_LEVEL})
SET (CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
SET (CPACK_SOURCE_GENERATOR "TBZ2")
SET (CPACK_SOURCE_PACKAGE_FILE_NAME
      "${PROJECT_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
SET (CPACK_GENERATOR "TGZ")
SET (CPACK_GENERATOR "DEB")
SET (CPACK_DEBIAN_PACKAGE_MAINTAINER "Richard Hacker") #required
SET (CPACK_SOURCE_IGNORE_FILES
      "/.hg;~$;.sw.$;${CPACK_SOURCE_IGNORE_FILES}")

INCLUDE (CPack)
ADD_CUSTOM_TARGET (dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)

# Search for mercurial, used to add ID information to the library
SET (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
FIND_PACKAGE (Mercurial REQUIRED)
MERCURIAL_HG_INFO (${PROJECT_SOURCE_DIR} Package)

# Require CommonC++
FIND_PACKAGE (PkgConfig REQUIRED)
PKG_CHECK_MODULES (LIBCCEXT2 REQUIRED libccext2)

# The following flags are used when calling cmake with CMAKE_BUILD_TYPE
# eg: cmake -DCMAKE_BUILD_TYPE=Release
#SET (CMAKE_CXX_FLAGS_Debug "-DDEBUG -g")
#SET (CMAKE_CXX_FLAGS_Release "-O2")
#SET (CMAKE_CXX_FLAGS_RelWithDebInfo "-g -O2")
#SET (CMAKE_CXX_FLAGS_MinSizeRel "")

ADD_DEFINITIONS ("-Wall -ansi")
# IF (Debug)
#     ADD_DEFINITIONS ("-DDEBUG -g")
# ELSE (Debug)
#     ADD_DEFINITIONS ("-O2")
# ENDIF (Debug)

INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/include")
ADD_SUBDIRECTORY (src)
ADD_SUBDIRECTORY (test)

INSTALL (DIRECTORY "${ABS_INCLUDEDIR}"
    DESTINATION .
    PATTERN "*~" EXCLUDE
    PATTERN "*.orig" EXCLUDE)

CONFIGURE_FILE (
    "${PROJECT_SOURCE_DIR}/config.h.in"
    "${PROJECT_BINARY_DIR}/config.h"
    )

