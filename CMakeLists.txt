# cmake file for building process data communications server

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(pdcomserv)
SET (CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS TRUE)

ENABLE_TESTING()

INCLUDE (InstallRequiredSystemLibraries)

SET (MAJOR_VERSION 0)
SET (MINOR_VERSION 99)
SET (PATCH_LEVEL 0)
SET (VERSION ${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_LEVEL})
#SET (${PROJECT_NAME}_SOVERSION "SOVERSION")
#    ${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_LEVEL})


SET (CPACK_PACKAGE_DESCRIPTION_SUMMARY "Process data communications library")
SET (CPACK_PACKAGE_VENDOR "Richard Hacker")
SET (CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README.txt")
SET (CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING")
SET (CPACK_PACKAGE_VERSION_MAJOR ${MAJOR_VERSION})
SET (CPACK_PACKAGE_VERSION_MINOR ${MINOR_VERSION})
SET (CPACK_PACKAGE_VERSION_PATCH ${PATCH_LEVEL})
SET (CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
SET (CPACK_SOURCE_GENERATOR "TBZ2")
SET (CPACK_SOURCE_PACKAGE_FILE_NAME
      "${PROJECT_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
SET (CPACK_GENERATOR "TGZ")
SET (CPACK_GENERATOR "DEB")
SET (CPACK_DEBIAN_PACKAGE_MAINTAINER "Richard Hacker") #required
SET (CPACK_SOURCE_IGNORE_FILES
      "/.hg;~$;.sw.$;${CPACK_SOURCE_IGNORE_FILES}")

INCLUDE (CPack)
ADD_CUSTOM_TARGET (dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)


IF (CMAKE_INSTALL_PREFIX STREQUAL "/usr/local")
    SET (CMAKE_INSTALL_PREFIX "/opt/etherlab")
ENDIF ()

IF (NOT SYSCONFDIR)
    SET (SYSCONFDIR ${CMAKE_INSTALL_PREFIX}/etc)
ENDIF ()

IF (NOT LIBDIR)
    SET (LIBDIR ${CMAKE_INSTALL_PREFIX}/lib)
ENDIF ()

# Search for mercurial, used to add ID information to the library
SET (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
FIND_PACKAGE (Mercurial REQUIRED)
MERCURIAL_HG_INFO (${PROJECT_SOURCE_DIR} Package)

# Require CommonC++
FIND_PACKAGE (PkgConfig REQUIRED)
PKG_CHECK_MODULES (LIBCCEXT2 REQUIRED libccext2)

# The following flags are used when calling cmake with CMAKE_BUILD_TYPE
# eg: cmake -DCMAKE_BUILD_TYPE=Release
#SET (CMAKE_CXX_FLAGS_Debug "-DDEBUG -g")
#SET (CMAKE_CXX_FLAGS_Release "-O2")
#SET (CMAKE_CXX_FLAGS_RelWithDebInfo "-g -O2")
#SET (CMAKE_CXX_FLAGS_MinSizeRel "")

ADD_DEFINITIONS ("-Wall -ansi")
# IF (Debug)
#     ADD_DEFINITIONS ("-DDEBUG -g")
# ELSE (Debug)
#     ADD_DEFINITIONS ("-O2")
# ENDIF (Debug)

INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/include")
ADD_SUBDIRECTORY (src)
ADD_SUBDIRECTORY (test)

INSTALL (DIRECTORY "${PROJECT_SOURCE_DIR}/include"
    DESTINATION .
    PATTERN "*~" EXCLUDE
    PATTERN "*.orig" EXCLUDE)

CONFIGURE_FILE (
    "${PROJECT_SOURCE_DIR}/config.h.in"
    "${PROJECT_BINARY_DIR}/config.h"
    )

